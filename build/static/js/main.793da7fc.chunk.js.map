{"version":3,"sources":["css/App.module.scss","components/About/About.jsx","components/Home/Home.jsx","components/Movie/MovieItem.jsx","components/Movie/MovieList.jsx","components/Movie/Movie.jsx","App.jsx","serviceWorker.js","index.js","css/MovieItem.module.scss"],"names":["module","exports","About","props","state","Component","Home","MovieItem","className","MovieItemStyle","container","src","this","images","small","alt","img","title","year","genres","join","MovieList","movieList","page","parseInt","match","params","pageCount","total","isLoading","movieType","type","style","display","flexWrap","renderList","map","item","i","key","axiosRequest","flexGrow","tip","message","description","setTimeout","data","require","setState","subjects","console","log","Content","Layout","Sider","Movie","height","width","background","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","Item","to","paddingLeft","padding","margin","minHeight","path","component","Header","Footer","APP","AppStyle","logo","theme","window","location","hash","split","lineHeight","textAlign","Boolean","hostname","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.793da7fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo__3X3Kg\"};","import React, { Component } from 'react';\r\nclass About extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() {\r\n        return <div>\r\n            about组件\r\n        </div>;\r\n    }\r\n}\r\n \r\nexport default About;","import React, { Component } from 'react';\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return <div>\r\n            home\r\n        </div>;\r\n    }\r\n}\r\n \r\nexport default Home","import React, { Component } from 'react';\r\nimport MovieItemStyle from '../../css/MovieItem.module.scss'\r\nclass MovieItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return <div className={MovieItemStyle.container}>\r\n            <img src={this.props.images.small} alt=\"\" className={MovieItemStyle.img}/>\r\n            <h4>电影名称：{this.props.title}</h4>\r\n            <h4>上映年份：{this.props.year}</h4>\r\n            <h4>电影类型：{this.props.genres.join(\",\")}</h4>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default MovieItem;","import React, { Component } from 'react';\r\nimport { Spin, Alert } from 'antd';\r\nimport Axios from 'axios'\r\nimport MovieItem from './MovieItem.jsx'\r\n\r\nclass MovieList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movieList: [],\r\n            page: parseInt(this.props.match.params.page) || 1,\r\n            pageCount: 10, //每页多少条数据\r\n            total: 0, //当前页面下有多少条数据\r\n            isLoading: true,\r\n            movieType: this.props.match.params.type\r\n        }\r\n    }\r\n    render() {\r\n        return <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n            {this.renderList()}\r\n            {this.state.movieList.map((item, i) => {\r\n                return <MovieItem {...item} key={i}></MovieItem>\r\n            })}\r\n        </div>\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.axiosRequest()\r\n    }\r\n    renderList() {\r\n        if (this.state.isLoading) {\r\n            return <div style={{ flexGrow: 1 }}>\r\n                <Spin tip=\"Loading...\">\r\n                    <Alert\r\n                        message=\"正在请求电影列表\"\r\n                        description=\"精彩内容，马上呈现\"\r\n                        type=\"info\"\r\n                    />\r\n                </Spin>\r\n            </div>\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    axiosRequest() {\r\n\r\n        setTimeout(() => {\r\n            let data = require(\"./data1.json\")\r\n            this.setState({\r\n                isLoading: false,\r\n                movieList: data.subjects\r\n            })\r\n            console.log(data.subjects);\r\n        }, 1000)\r\n        // const start = (this.state.page - 1) * this.state.pageCount\r\n        // const url = `/v2/movie/${this.state.movieType}?apikey=0df993c66c0c636e29ecbb5344252a4a&start=${start}&count=${this.state.pageCount}`\r\n        // console.log(this.state.movieType);\r\n        // Axios.get(url)\r\n        //     .then(response => {\r\n        //         console.log(response);\r\n        //         this.setState({\r\n        //             isLoading:false,\r\n        //             movieList:response.subjects\r\n        //         })\r\n        //     })\r\n    }\r\n\r\n}\r\n\r\nexport default MovieList","import React, { Component } from 'react';\r\nimport {Route,Link} from 'react-router-dom'\r\n\r\n//导入组件\r\nimport MovieList from './MovieList.jsx'\r\n\r\n//antd\r\nimport { Layout, Menu, } from 'antd';\r\n\r\nconst {  Content, Sider } = Layout;\r\n\r\n\r\nclass Movie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return <Layout style={{height:\"100%\"}}>\r\n        <Sider width={200} style={{ background: '#fff' }}>\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            style={{ height: '100%', borderRight: 0 }}\r\n          >\r\n              <Menu.Item key=\"1\"><Link to=\"/movie/in_theaters/1\">正在热映</Link></Menu.Item>\r\n              <Menu.Item key=\"2\"><Link to=\"/movie/coming_soon/1\">即将上映</Link></Menu.Item>\r\n              <Menu.Item key=\"3\"><Link to=\"/movie/top250/1\">Top250</Link></Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ paddingLeft:\"1px\" }}>\r\n          <Content\r\n            style={{\r\n              background: '#fff',\r\n              padding: 10,\r\n              margin: 0,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n              <Route path=\"/movie/:type/:page\" component={MovieList}></Route>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n        \r\n    }\r\n}\r\n \r\nexport default Movie","import React, { Component } from 'react';\nimport { HashRouter, Router, Link, Route } from 'react-router-dom'\nimport AppStyle from './css/App.module.scss'\n\n//导入路由组件\nimport About from './components/About/About.jsx'\nimport Home from './components/Home/Home.jsx'\nimport Movie from './components/Movie/Movie.jsx'\n\n//导入ant design\nimport { Layout, Menu } from 'antd';\nimport 'antd/dist/antd.css';//引入全部的css\nconst { Header, Content, Footer } = Layout;\n\n\n\n\n\n\nclass APP extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  render() {\n    \n    return <HashRouter>\n      <Layout className=\"layout\" style={{ height: \"100%\" }}>\n        <Header>\n          <div className={AppStyle.logo} />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[window.location.hash.split('/')[1]||'home']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"home\"><Link to=\"/home\">首页</Link></Menu.Item>\n            <Menu.Item key=\"movie\"><Link to=\"/movie/in_theaters/1\">电影</Link></Menu.Item>\n            <Menu.Item key=\"about\"><Link to=\"/about\">关于</Link></Menu.Item>\n          </Menu>\n        </Header>\n        <Content>\n          <div style={{ background: '#fff', minHeight: 280, height: \"100%\" }}>\n            <Route path=\"/home\" component={Home}></Route>\n            <Route path=\"/about\" component={About}></Route>\n            <Route path=\"/movie\" component={Movie}></Route>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>React-Movie ©2020 Created by Zhang Ce</Footer>\n      </Layout>,\n    </HashRouter>\n  }\n  componentDidMount() {\n\n  }\n}\n\nexport default APP;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieItem_container__38bza\",\"img\":\"MovieItem_img__2G57E\"};"],"sourceRoot":""}